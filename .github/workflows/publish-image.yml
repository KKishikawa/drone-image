name: Build and Publish Docker Image

on:
  workflow_dispatch:
    inputs:
      directory:
        description: 'Directory to build Docker image from'
        required: true
        type: choice
        options:
          # Add image directories here!
          - 'dood'

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      IMAGE_NAME: ${{ steps.parse_inputs.outputs.IMAGE_NAME }}
      IMAGE_VERSION: ${{ steps.parse_inputs.outputs.IMAGE_VERSION }}
      IS_BETA: ${{ steps.parse_inputs.outputs.IS_BETA }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Parse Inputs
        id: parse_inputs
        run: |
          if [[ ! -f "src/${{ github.event.inputs.directory }}/Dockerfile" ]]; then
            echo "Directory src/${{ github.event.inputs.directory }} does not exist or does not contain a Dockerfile"
            exit 1
          fi
          IS_BETA=0
          if [[ ${{ github.ref }} != 'refs/heads/main' ]]; then
            IS_BETA=1
          fi
          echo "IS_BETA=$IS_BETA" >> $GITHUB_OUTPUT
          # version is based on the timestamp (JST)
          IMAGE_VERSION=$(if [[ $IS_BETA == 1 ]]; then echo "beta-"; fi)$(TZ=Asia/Tokyo date '+%Y%m%dT%H%M%S')
          echo "IMAGE_VERSION=$IMAGE_VERSION" >> $GITHUB_OUTPUT
          echo "IMAGE_NAME=${{ github.event.inputs.directory }}" >> $GITHUB_OUTPUT
      - name: Setup buildx
        uses: docker/setup-buildx-action@f7ce87c1d6bead3e36075b2ce75da1f6cc28aaca # v3
      - name: Login to ghcr.io
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: create metadata
        id: metadata
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5
        with:
          images: ghcr.io/${{ github.repository }}/${{ steps.parse_inputs.outputs.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ steps.parse_inputs.outputs.IS_BETA == 0 }}
            type=schedule,pattern={{date 'YYYYMMDD-hhmmss' tz='Asia/Tokyo'}}
            type=sha
      - name: Build and push
        uses: docker/build-push-action@0adf9959216b96bec444f325f1e493d4aa344497 # v6
        with:
          context: "src/${{ github.event.inputs.directory }}"
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          platforms: linux/amd64,linux/arm64
  add_tag:
    runs-on: ubuntu-latest
    needs: build_and_push
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Add Tag to GitHub
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          tag_name=${{ needs.build_and_push.outputs.IMAGE_NAME }}-${{ needs.build_and_push.outputs.IMAGE_VERSION }}
          git tag -a "$tag_name" -m "$(if [[ ${{ needs.build_and_push.outputs.IS_BETA }} == 1 ]]; then echo "Beta "; fi)Release $tag_name"
          git push origin "$tag_name"
